---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";

import { formatDate } from "../utils";
import { SITE_LANG} from "../consts";
import 'gitalk/dist/gitalk.css';
import 'tocbot/src/scss/tocbot.scss';
const { frontmatter } = Astro.props;
const type = frontmatter.tags[0];
const { pubDate, title, description, featured } = frontmatter;
const dateFormated = formatDate(pubDate);
const coverurl = frontmatter.cover.url;
---

<html lang={SITE_LANG} dir="ltr" class="js no-touch progressive-image no-reduced-motion progressive">
  <head>
    <BaseHead frontmatter={frontmatter}/>
    <script>
      window.onload = function() {
        var images = document.getElementsByTagName("img");
        var body = document.body;
        
        for (var i = 0; i < images.length; i++) {
          var image = images[i];
          // 判断图片是否包含 "cover" 和 "image" 类名
          if (image.classList.contains("cover") && image.classList.contains("image")) {
            continue; // 跳过该图片，不执行弹出窗口的代码
          }
          image.addEventListener("click", function() {
            var div = document.createElement("div");
            div.style.position = "fixed";
            div.style.top = "0";
            div.style.left = "0";
            div.style.width = "100%";
            div.style.height = "100%";
            div.style.backgroundColor = "rgba(255,255,255, 0.6)";
            div.style.backdropFilter= "blur(8px)"; 
            div.style.zIndex = "9999";
            
            var img = document.createElement("img");
            img.style.position = "absolute";
            img.style.top = "50%";
            img.style.left = "50%";
            img.style.transform = "translate(-50%, -50%)";
            img.style.maxWidth = "98%";
            img.style.maxHeight = "98%";
            img.style.borderRadius = "5px";
            img.style.boxShadow = "0 0 20px #89b8ffaa";
            img.src = this.src;
            
            div.appendChild(img);
            body.appendChild(div);
            
            div.addEventListener("click", function(event) {
              if (event.target === div || event.target === img) {
                body.removeChild(div);
              }
            });
          });
        }
      };
    </script>
  </head>
  <body class:list={["page-article", { "theme-dark": frontmatter.theme === "dark" }]}>
    <Header />
    <main id="main" class="main">
      <dialog id="phoneSuggestion">
        <div class="dialog-content">
          <p
            style="font-size: 26px; 
                font-weight: Bold;
                color: #4870ac;
                border-radius: 15px;
              padding: 10px;
                background-color: #ffffff51;
                box-shadow: 0 0 15px #89b8ff55;"
          >
            July.cc Blogs
          </p>
          <p></p>
          <p style="font-size: 20px;">本篇文章</p>
          <p style="font-size: 18px; text-align: center;">
            手机用户建议<br />PC模式 或 横屏<br />阅读
          </p>
          <p></p>
          <button class="dialog-button">确认</button>
        </div>
      </dialog>
      
      <section>
        <article class="article  js-toc-content">
          <div class="divUp"></div>
          <figure class="image component image-fullbleed body-copy-wide image-cover">
            <div class="component-content">
              <div class="image-sharesheet">
                <img style="position: relative; top: 50%; left: 50%; transform: translate(-50%) scale(1.01);" data-src={coverurl} alt="" class="picture-image" src={coverurl}>
              </div>
            </div>
          </figure>
            <hr style="margin: auto; height: 1px; background-image: linear-gradient(to right, #0744ac, rgb(0, 0, 0, 0), #0744ac); unicode-bidi: isolate; margin-block-start: 0.5em; margin-block-end: 0.5em; margin-inline-start: auto; margin-inline-end: auto; overflow: hidden;  border-width: 0px;">
          <div class:list={[{ "featured-header": featured, "article-header": !featured }]}>
            <div class="category component">
              <div class="component-content">
                <div class="category-eyebrow">
                  <span class="category-eyebrow__category category_original">{type}</span>
                  <span class="category-eyebrow__date">{dateFormated}</span>
                </div>
              </div>
            </div>
            <div class="pagetitle component">
              <div class="component-content js-toc-content">
                <h1 class="hero-headline">{title}</h1>
              </div>
            </div>
            <div class:list={[{ "featured-subhead": featured, "article-subhead": !featured }, "component"]}>
              <div class="component-content">{description}</div>
            </div>

            <div class:list={["tagssheet component"]}>
              <div class="component-content">
                {
                  frontmatter.tags.map((tag) => {
                    return (
                      <a href={`/tags/${tag}`} class="tag">
                        {tag}
                      </a>
                    );
                  })
                }
                <hr style="margin: auto; height: 1px; background-image: linear-gradient(to right, #0744ac, rgb(0, 0, 0, 0), #0744ac); unicode-bidi: isolate; margin-block-start: 0.5em; margin-block-end: 0.5em; margin-inline-start: auto; margin-inline-end: auto; overflow: hidden;  border-width: 0px;">
              </div>
            </div>
          </div>
          <div class="divUpSidebar"></div>
          <nav id="tocc" style="overflow: hidden;" class="toc">
            <div class="toggle-button">
              <button style="font-weight:600; writing-mode: vertical-rl; padding-top:0.4em" id="toggleButton" class="expand">展开目录</button>
            </div>
            <ul class="js-toc"></ul> 
          </nav>
        </div>
          <slot/>
          <div class="component">
            <div class="component-content">
              <div class="article-copyright">
                <a class="content" href="https://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh" target="_blank"
                  >版权声明：自由转载-非商用-非衍生-保持署名（创意共享3.0许可证）</a
                >
                <p class="content">作者： {frontmatter.author} 发表日期：{dateFormated}</p>
              </div>
              <div id="gitalk-container"></div>
            </div>
          </div>
        </article>
        <script>
            // 获取要检查的元素
            var elem = document.getElementById("pcMode");
    
            // 检查元素是否存在且是否被隐藏
            if (elem) {
              // 在 dialog 中显示提示信息
              var pcModeDialog = document.getElementById("phoneSuggestion");
              pcModeDialog.showModal();
    
              // 监听确认按钮点击事件
              pcModeDialog.querySelector(".dialog-button").addEventListener("click", function () {
                // 关闭弹窗
                pcModeDialog.close();
              });
            }
        </script>
        <script>
          import Gitalk from 'gitalk';
          const gitalk = new Gitalk({
              clientID: '0c4d13aa9a4a6440b432',
              clientSecret: 'c72866174280de49fb3a2e20eb4f4dcbcd804050',
              repo: 'gitalk_blog',      // The repository of store comments,
              owner: 'humid1ch',
              admin: ['humid1ch'],
              id: location.pathname,      // Ensure uniqueness and length less than 50
              distractionFreeMode: false  // Facebook-like distraction free mode
          })

          gitalk.render('gitalk-container')
        </script>
        <script>
          import tocbot from 'tocbot';
          tocbot.init({
            // Where to render the table of contents.
            tocSelector: '.js-toc',
            // Where to grab the headings to build the table of contents.
            contentSelector: '.article',
            ignoreSelector: '.hero-headline',
            // Which headings to grab inside of the contentSelector element.
            headingSelector: 'h1, h2, h3, h4, h5, h6',
            // For headings inside relative or absolute positioned containers within content.
            collapseDepth: 2,
            orderedList: false,
            collapsedClass: 'is-collapsed',
            positionFixedClass: 'is-position-fixed',
            headingsOffset: 250,
            scrollSmoothOffset: -250,
          });

          let toc = document.getElementById('tocc');
          toc.classList.add('collapsed');

          toc.classList.add('fixed');
		      toc.style.top = window.innerHeight/2 - 42 + "px";


          var toggleButton = document.getElementById('toggleButton');

          // 点击 TOC 外部区域时收缩 TOC
          document.addEventListener('click', function(event) {
            var target = event.target;

            if (!toc.contains(target)) {
              toc.classList.add('collapsed');
			        toggleButton.textContent = '展开目录';
				      toc.style.height = "5em";
				      toc.style.top = window.innerHeight/2 - 42 + "px";
            }
          });

          toggleButton.addEventListener('click', function() {
            toc.classList.toggle('collapsed');
			      if (toc.classList.contains('collapsed')) {
    			    // 如果有，说明 toc 是收起的，那么 button 的文本应该是展开目录
    			    toggleButton.textContent = '展开目录';
				      toc.style.height = "5em";
				      toc.style.top = window.innerHeight/2 - 42 + "px"; 
  			    } else {
    			    // 如果没有，说明 toc 是展开的，那么 button 的文本应该是收起目录
    			    toggleButton.textContent = '收起目录';
				      toc.style.top = "0px";
				      toc.style.height = window.innerHeight + "px";
  			    }
          });
        </script>
      </section>
    </main>
    <Footer />
    <script is:inline>
      var script = document.createElement("script");
      script.src = "/static/js/initPost.js";
      document.head.appendChild(script);
    </script>
    <script>
      document.addEventListener('DOMContentLoaded', (event) => {
    document.querySelectorAll('pre code').forEach((block) => {
        block.classList.add('hljs');
    });
});

    </script>
  </body>
</html>
